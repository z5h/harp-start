<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<%
//all of the following is to recurse _data.json files that include
//js,css, and other _data.json
//and add these resources to a list if they match the current 'env'
//and later, render these resources into the page.
(function(){

  //globals.env is declared as an empty array in our harp.json
  //we will put 'environments' into it that tell us what
  //we are rendering e.g. production/development/test/mobile etc
  env.push(environment);

  //also defined in globals are:
  //cssFiles
  //jsFiles

  //'current' is available to layouts. has 'path' and 'source' properties
  //if we are rendering something from /test/ add test to the env
  if (current.path[0] == 'test') env.push('test');

  //regexes to help recognize and manipulate files
  var _dataFile = /_data\.json$/;
  var jsFile = /\.(coffee|js)$/;
  var cssFile = /\.(less|styl|css)$/;
  var httpFile = /^(https:|http:)?\/\//;

  //include something that might be a css/js/directory resource.
  function include(file){
    if (jsFile.test(file)){
      includeFile(file.replace(jsFile, '.js'), jsFiles);
    } else if (cssFile.test(file)){
      includeFile(file.replace(cssFile, '.css'), cssFiles);
    } else if (_dataFile.test(file)){
      includeDir(file.replace('/_data.json',''));
    } else { //is a directory
      includeDir(file);
    }
  }

  //add file to given files
  //if it's in public, strip the public prefix and prepend the path
  //if the included file isn't local, don't alter it.
  function includeFile(file, files){
    if(httpFile.test(file)){
      files.push(file.replace(httpFile, '//'));
    } else {
      files.push(file.replace(/^public/,''));
    }
  }

  //given a path 'foo/bar/baz' iteratively look up properties:
  //public[foo][bar][baz]
  //useful because _data.json data made available as public.path.to._data
  function resourceFor(path){
    var resource = null;
    var parts = path.split('/');
    for (var i = 0; i < parts.length; i++){
      resource = (resource || public)[parts[i]];
    }
    return resource;
  }

  //get the _data.json for the given dir
  //included files listed under env values we are interested in
  function includeDir(path){
    var r = resourceFor(path)._data;
    var files = r.files || [];
    for (var i =0; i < files.length; i++){
      if (httpFile.test(files[i])){
        include(files[i]);
      } else {
        include(path + '/' + files[i]);
      }
    }
    for(var j =0; j < env.length; j++){
      files = (r[env[j]] && r[env[j]].files) || [];
      for (var i =0; i < files.length; i++){
        if (httpFile.test(files[i])){
          include(files[i]);
        } else {
          include(path + '/' + files[i]);
        }
      }
    }
  }

  //kick it off by including public css and js
  include('public/css');
  include('public/js');
})();
%>

<head>
  <title>Application</title>
  <meta http-equiv="content-type" content="text/html;charset=utf-8" />
  <% for (var i = 0; i < cssFiles.length; i++) { -%>
    <link rel="stylesheet" href="<%= cssFiles[i] %>">
  <% } -%>
</head>

<body>
<%- yield %>

<% for (var i =0; i < jsFiles.length; i++) { -%>
  <script type="text/javascript" src="<%= jsFiles[i] %>"></script>
<% } %>
</body>
</html>
